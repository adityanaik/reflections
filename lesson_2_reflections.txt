1) What happens when you initialize a repository? Why do you need to do it?

Running the git init command creates a .git directory in the said directory. As of now it looks like the first step in creating a git repository. The tracking commits feature will be added by a subsequent git command.


2) How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is an intermediate stage between a normal working directory and a git repository. It facilitates us to add the files which need to be tracked of changes, and ignore the other files.

3) How can you use the staging area to make sure you have one commit per logical change?

After making a logical update to the code, we should run "git status".
This will show all the edited files, which need to be brought to the staging area.
We can then get them up in staging area, and finally commit it by giving a understandable message.


4) What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If we want to make an alternate version of the project, it's better to think about making a branch instead of commiting to the master branch.

5) How do the diagrams help you visualize the branch structure?
It shows which commits will be shown when git log is called in a branch, and which commits will be ignored as if like they do not exist at all. This enforces the need to create a new branch at UNATTACHED HEADS.